{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { roboto } from \"@theme-ui/presets\";\n\nconst theme = _objectSpread(_objectSpread({}, roboto), {}, {\n  colors: _objectSpread(_objectSpread({}, roboto.colors), {}, {\n    background: \"orange\"\n  }),\n  buttons: _objectSpread(_objectSpread({}, roboto.buttons), {}, {\n    background: \"green\"\n  }),\n  containers: {\n    card: {\n      boxShadow: \"0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)\",\n      border: \"1px solid\",\n      borderColor: \"muted\",\n      borderRadius: \"4px\",\n      p: 2\n    },\n    layout: {\n      width: \"100%\",\n      maxWidth: \"960px\",\n      m: 0,\n      mx: \"auto\"\n    }\n  },\n  styles: _objectSpread({}, roboto.styles)\n});\n\nexport default theme;","map":{"version":3,"sources":["C:/Users/brian/Desktop/Code/FEM-NextJS/theme.ts"],"names":["roboto","theme","colors","background","buttons","containers","card","boxShadow","border","borderColor","borderRadius","p","layout","width","maxWidth","m","mx","styles"],"mappings":";;;;;;AAAA,SAAQA,MAAR,QAAqB,mBAArB;;AAEA,MAAMC,KAAK,mCACJD,MADI;AAEPE,EAAAA,MAAM,kCACCF,MAAM,CAACE,MADR;AAEFC,IAAAA,UAAU,EAAE;AAFV,IAFC;AAMPC,EAAAA,OAAO,kCACAJ,MAAM,CAACI,OADP;AAEHD,IAAAA,UAAU,EAAE;AAFT,IANA;AAUPE,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAE;AACFC,MAAAA,SAAS,EAAE,wDADT;AAEFC,MAAAA,MAAM,EAAE,WAFN;AAGFC,MAAAA,WAAW,EAAE,OAHX;AAIFC,MAAAA,YAAY,EAAE,KAJZ;AAKFC,MAAAA,CAAC,EAAE;AALD,KADE;AAQRC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,MADH;AAEJC,MAAAA,QAAQ,EAAE,OAFN;AAGJC,MAAAA,CAAC,EAAE,CAHC;AAIJC,MAAAA,EAAE,EAAE;AAJA;AARA,GAVL;AAyBPC,EAAAA,MAAM,oBACCjB,MAAM,CAACiB,MADR;AAzBC,EAAX;;AA8BA,eAAehB,KAAf","sourcesContent":["import {roboto} from \"@theme-ui/presets\"\r\n\r\nconst theme = {\r\n    ...roboto,\r\n    colors: {\r\n        ...roboto.colors,\r\n        background: \"orange\",\r\n    },\r\n    buttons: {\r\n        ...roboto.buttons,\r\n        background: \"green\"\r\n    },\r\n    containers: {\r\n        card: {\r\n            boxShadow: \"0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)\",\r\n            border: \"1px solid\",\r\n            borderColor: \"muted\",\r\n            borderRadius: \"4px\",\r\n            p: 2\r\n        },\r\n        layout: {\r\n            width: \"100%\",\r\n            maxWidth: \"960px\",\r\n            m: 0,\r\n            mx: \"auto\"\r\n        }\r\n    },\r\n    styles: {\r\n        ...roboto.styles\r\n    },\r\n}\r\n\r\nexport default theme;"]},"metadata":{},"sourceType":"module"}